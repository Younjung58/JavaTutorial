
<Class와 객체 최종정리>
Class란?  개발자가 표현하려는 대상	| 강아지
멤버변수(값저장) / 메서드(기능구현)	| 이름,나이 / 밥먹기,산책하기	
-> Class를 사용하기위해 객체로 만든다.(사용 -> 값을 저장하기위해, 기능을 필요로하기에 사용하기 위해서)
-> Class로부터 객체를 만드는 법(사용법) => new 생성자
생성자는 객체가 만들어질 때 처음 실행되는 메서드이다.
생성자는 재호출이 불가능하다. 생성자는 클래스명과 동일하다.

--------------------------------------------------------------------------------------------

지역변수가 멤버변수를 우선함. 
String ename = null;   // 멤버변수 ename을 선언

메소드에서
public void setEname (String ename){		-> 매개변수 정의에 사용된 ename은 지역변수
	ename(멤버변수) = ename(지역변수);	(이렇게 적으면 혼선이 생길 수 있음)
	this.ename = ename;		(따라서 이와 같이 표현함. this.ename은 멤버변수 ename을 의미함)
}

--------------------------------------------------------------------------------------------

<List>
배열: 고정길이를 가짐, 순서가있음(인덱스번호)
      / 선언 -> String [] a = new String[3];    의 형태

List: 가변길이를 가짐, 순서가있음(인덱스번호)
     / 선언 -> ArrayList < 저장할 type(ex.String) > b = new ArrayList<>();    의 형태
	     -> String type을 저장할 리스트 객체를 생성
                 -> 변수명은 b이다
     / 중간 번호의 인덱스 값을 삭제하면, 뒤에 값들이 하나씩 줄어든 인덱스 번호에 저장됨
     / 중간 번호의 인덱스 값으로 새로운 값을 저장하면, 기존 그 인덱스에 있던 값부터 뒤에 존재하는 값들이 하나씩 밀려서 저장됨            
                 
인덱스는 중복될 수 없지만, 인덱스 안에 저장된 값(value값)은 중복될 수 있다.
=> 배열, 리스트의 인덱스 번호로 unique한 성질을 가지기 때문 


사용 가능한 메서드
add(value)   -- 맨뒤에 추가
add(index,  value)  - index 위치에 추가하고 뒤로 밀림
size()   -- 리스트의 전체 사이즈
get( index)   -- index위치의 값 가져오기
remove(index)  - index위치 값 제거
clear()  - 리스트 전체 값 제거
set(index,value)   - index위치 값 수정

