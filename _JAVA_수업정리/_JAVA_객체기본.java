package _JAVA_수업정리;

public class _JAVA_객체기본 {
	
//		java에서 대문자로 시작되는 자료형(String)은 .charAt과 같이 .을 사용가능(참조 타입)
//		소문자로 시작되는경우(int, char, boolean, double, float)는 사용 불가능(원시 타입)
//		예외: 배열은 .을 사용할 수 있다.
//		EX) arr.length로 배열의 길이 나타냄
//		결론: 객체는 참조타입과 밀접한 관련이 있다.
//		
//		**********************객체의 개념을 잘 정리할 것*****************************
//		.을 사용할 수 있는 타입은 참조타입이라고하고, .을 사용할 수 없는 타입은 원시타입이라고함
//		배열의 값은 원시타입을 사용할 수 있고, 배열 자체는 참조타입이다.
//
//		객체는 참조타입에 필요하다.(객체는 참조타입과 관련되어있다.)
//		객체
//		->내가 정의한 것이 객체가 됨(대상에 대한 정확한 정의가 설명되어있어야 객체가 될 수 있음)
//		->밀키트와 같은 것, 즉 객체는 만들어진 부품이며 부품에 대한 사용법이 정해져있음
//
//		예시를 들자면, javascript에서
//		var a = new Math();   (부품을 만들때 이름을 a로 지정)
//		참조타입인 부품 Math를 a로 지정해서 객체로 생성함
//		따라서, a라는 것이 객체이며
//		a.random();	(부품에서 필요한 기능을 꺼내어 사용)
//		이런식으로 random한 숫자를 나타낼때 사용하는 .random이 객체의 사용법에 속한다.
//
//		class는 설계도를 만드는 것(public class로 생성 가능)
//		class(변수와 method(new Math())로 구성, new가 객체 창조하는역할!)가 설계도가 되고, 설계도가 실제 객체(a)가 되면,
//		우리가 객체(a)를 사용하는 것(사용자가 사용하는것)
//
//		설계도(Class)와 new연산자로 객체를 만든다.
//		객체는 변수와 method로 이루어져있다.
		
}
