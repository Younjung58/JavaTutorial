class를 정의한다 -> 추상화

<메서드>  -> 어떠한 class에 존재하는 메서드인지를 먼저 보기!
1. 어떤 기능을 정의
2. 정의와 호출(Call) 구분
   (만들다(1번)->정의 / 사용한다(필요할때마다)->호출)

정의: 
 접근제어자 리턴타입 메서드명(매개변수 정의){
	
 }

호출(Call): 메서드명(매개변수 값)
=> 여기서 (매개변수정의) 와 (매개변수 값)은 생략이 가능하다.

<메서드를 사용하는 흐름> - Call
1. 그냥 호출 -> (매개변수 값)이 생략된 경우
2. 무엇인가 넘겨주는 -> (매개변수 값)

call -> 코드실행 -> 리턴(호출위치로 전달하는 값) -> 있다(ex.String) / 없다(void)
			-> 리턴타입

ex 1) 
정의->
public int kkk(int a , int b){
	int ab = (a+b);
	return ab;
}

호출 -> kkk(30,40)

ex 2)
r.nextInt(45);	(호출)
-> 참조변수 r를 .으로 참조함
-> nextInt()에 매개변수 45를 넘겨서 메소드를 호출
-> 0부터 44중에 랜덤한 int 하나를 리턴받음

--------------------------------------------------------------------------------
String a = "820405" ; 

String a ->  선언문, 타입(변수에 저장하는 값의 타입)은 String, a는 참조변수(객체의 주소값을 저장)
= ->  대입연산자
"820405" -> 초기값


a.substring(0,2);

a ->참조변수
. -> 참조한다(주소로 heap객체를 찾아감)
a.substring(0,2) -> 메서드 call(매개변수값 2개)
--------------------------------------------------------------------------------