package _JAVA_수업정리;

public class _JAVA_변수선언 {
	
//		<Java>
//		-변수: 값을 저장하는 공간(중간과정을 저장하기 위해서)(적을수록 좋음, 프로그램 가벼워짐)(var, let, const)
//		  -> 선언문의 형태: '자료형'(값이 무엇인지를 알려줌 (정수, 문자, 문자열, 실수..)) '변수명'(변수) = '초기값'(변수가 처음 만들어질때 가지는 값);
//	
//		String(문자열) 선언시에 java는 " "로 선언해야함
//		char(문자)는 ' '로 선언해야함
//	
//	
//		철수는 30세이고 키는 180이다(시나리오)
//		철수의 나이와 이름을 저장하고 철수의 나이를 +2 증가한다.(문제해결)
//		-> String a = "철수";
//		    int b = 30;
//		    b+=2;
//		-> String name = null;
//		    name = "철수";
//		    int age = 0;
//		    age = 30;
//		    age = age+2;
//	    
//	    * java는 객체(부품)지향언어임 *
//	    * java는 클래스 단위로 부품을 만듦(자바에서 객체는 Class로 정의한다.) *
//	    * Class는 변수와 메서드로 구성된다. *
//	    * Class를 묶어 놓은 것이 패키지이다. *
//	    function은 어떠한 기능을 정의해 놓는것, call해서 사용 -> 자바에서는 method를 사용
//	    객체 안에는 method가 있다(어떠한 기능이 있음)
//	    Method는 어떠한 기능을 가지고 있는것임.
//	    => 자바는 객체지향언어이고 클래스의 단위로 만들며 그 안에는 method와 변수가 있다.
//	    (*는 외우기!!!!!!!!!!!!)
//	    
//	    
//	    package sample01(패키지 이름);
//
//	    public class Test01(클래스이름) {
//
//	    	public static void main(String[] args)(메소드이름) {
//	    		// TODO Auto-generated method stub           	
//	    		->main이라는 method를 가짐, 이 method는 프로그램의 시작을 알리는 기능임
//	    		---메소드 영역---
//	    	}
//
//	    }
//	    
//	    
//	    자료형에따라서 사용되는 연산자의 의미가 달라짐(정수와 실수에서 + 는 값을 더하는것, 문자열에서 +는 문자열의 연결자로 역할)
//	    '='는 대입연산자임
//
//	    캐스팅: 형이 변환하는것(정수를 실수로 나누면 최종값이 실수형으로 반환됨)
//
//	    -연산자-
//	    '대입연산자': 뒤에있는 값을 앞에 대입함(마지막)
//	    '산술연산자'
//	    '비교연산자': true false로 반환되는(== / !=)


}
