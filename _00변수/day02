*자바, 자바스크립트, 데이터베이스*는 반드시 공부할 것

구글에 git readme 꾸미는 법 찾아서 매일매일 정리하기(배운내용 중에서 어려웠던 내용 적기-> ~~~내용 복습필요 와 같은 피드백)****************

Remote의 repository의 branch(main, master...)를 만드는 이유: 실행중인 것을 복사하여 다른 브랜치로 만들어 개발 환경을 구축(버전을 관리하기 위해)
Fork는 이 프로젝트에 참여한 사람 수

!는 html버전 5임을 나타냄
lang="en"은 영어로 작성됨을 의미
컴퓨터는 2진수로 작성되기 때문에 영어로 작성된 문서를 2진수로 바꿔서 저장->저장방법: "UTF-8(전세계에서 사용)" / EUCKR(한국만)

이클립스에서(한글 깨지지 않게 만들기위해!!!!!!!!!)(내가 작성한 것을 어떤 방식으로 2진수로 변경할것인가)
->Window->General->Workspace->Text file encoding을 "UTF-8"로 변경!!!!!!!!

***workspace 위치(File에 Switch Wordkspace누르면 확인가능)랑 encoding(위 설명) 반드시 확인할 것***

-------------------------------------------------------------------------------------------------------------

<git 용어>
cd:changed directory
d: directory (현재 디렉토리 보기)
첫 루트(\->/로 표시되는 것): 시작점
pwd: 현재 디렉토리를 의미
ls : 현재 D드라이브에 있는 리스트가 나옴
(끝에 / 에 되었는 것이 파일임, 없으면 자료임)
(리눅스 기본 디렉토리 확인법: 'cd <위치>'-> 'pwd(현재 이동 경로 나옴)'-> 'ls로 있는 파일확인' 이것을 반복적으로 사용하면서 원한느 위치까지 이동)
이동해서 git init해서 git파일 만들었으면 깃 유저네임과 깃 이메일을 설정해야함(git config --global user.name(email) '  ' 사용)
그 후에 local과 remote를 원격으로 연동해 주어야함(git repository의 주소를 복사하여 git remote add origin '나의 git hub repository 주소')
잘 연결 되었는지 확인(git remote -v)
(fetch는 remote에 있는 것을 local에 가져올 때 사용할 주소
push는 local에 있는 것을 remote에 올릴 때 사용할 주소 을 의미함)
그 다음에 local과 remote에서 branch, 즉 main과 master가 같은지 다른지 확인하여 같게 맞추어줘야함
다를시에, local에 있는 것을 바꿔주려면(git branch 이름바꾸기) 
->>git branch main(해서 branch를 새로 생성)
   git branch(해서 branch의 목록을 확인)
   git checkout main(해서 현재 master였던 것을 main으로 이동)
((중간중간 git status를 사용하여 상태를 확인할 수 있음))
git add *
git commit -m 'commit내용'
***commit의 횟수가 높을수록 최신임(remote와 local비교) (remote가 더 최신일 경우 push가 진행되지 않음)***

git push origin main하면 remote인 github로 내용이 올라가짐

형상관리: local repository(현 컴퓨터에 git 만든곳) // remote repository(git hub에 만든 것)
형상관리 대상 : 경로로서 설정한 것(이곳에 git을 형성)(cd->pwd->ls로 이동해서 온 곳에)
(형상관리 대상에서 삭제하고 싶으면 형성한 git을 삭제하면 됨)

-------------------------------------------------------------------------------------------------------------

 <컴퓨터의 구조>
1. cpu(중앙처리장치, 처리하는 곳, 주방장)
2. 메모리(주기억 장치(RAM), 임시적인 기억장치(휘발성), 컴퓨터가 켜졌을 때 보조기억장치로부터 data를 가져옴, 즉 cpu에게 데이터를 가져다주는 보조장치임, cpu가 다 사용하면 삭제함) 
3. 보조기억장치(USB, HDD, SD ....처럼 데이터를 저장하고 전원이 꺼져도 삭제되지 않음, 영구적으로 저장하는 곳, 냉장고)
-> 메모리와 보조기억장치의 차이는 전원이 켜졌을 때와 안켜졌을 때로 구분!
-> 즉, 사용자가 ctrl +f11을 누를때 메모리가 보조기억장치로 부터 test01을 가져오는 개념
-> 사용되는 byte에 따라서 현명하게 자료형을 선택하여 사용하기(불필요하게 메모리를 잡아먹는 것을 방지하기 위해서)
(예를들어 1부터 100까지의 숫자만 필요하면 4바이트를 사용하는 int보다는 1byte를 사용하는 byte로 자료형을 지정하기)
***자료형 종류와 byte수를 기억하기***

-------------------------------------------------------------------------------------------------------------

 <연산자>
1. 단항 : ++, --, +(양의정수), -(음의정수)
2. 이항 : 산술연산자(+ - * / %), 비교연산자(== != >= <= > <), 대입연산자(= += -= *= /=)
a++이 a+1보다 속도빠름 // 우선순위는 단항>이항(산술>비교>대입)>...순

 <배열>
장점 : 변수를 하나로 사용해서 여러개의 값을 저장할 수 있다
특징 : 고정길이를 가지고있음
로또번호 6개를 추출할때, 연속된 a의 배열을 만듦
(저장시에 변수를 6개 선언하는 것 보다 배열의 값을 수정하는 것이 편리함)
 int[ ] a = new int[6];
 0   1   2   3   4   5  -> index
---------------------- 
20  30  40  36  2  5   -> value
-> a[0] = 20;
-> 길이 : 6  / 인덱스 : (길이-1)