제목 :  수강신청프로그램
학생이 있다. 학생은 아이디, 이름, 전화번호, 학년의 정보를 갖는다. 		=> 자바기술: 변수(접근제어자) / 자료형 / class(학생)+추상화(1,2,5,6,7)
교과목이 있다. 과목은 과목명, 강의실, 담당교수가 있다. 		=> 자바기술: 변수(접근제어자) / 자료형 / class(교과목)+추상화(1,2,5,6,7)

- 학생을 등록할 수 있다. <선택> 아이디는 중복될 수 없다.(1,2,3,4,5,7,8,11)
		=> 학생전체를 등록 및 제어할  class가 필요(5)
		=> 자바기술: 반복문을 통한 동일 아이디 존재에대한 검사 / 조건문을 통한 값 저장 제어(등록메소드 정의)(3,4)
		=> 해당 class에서 한 학생의 정보를 입력+저장의 기능으로 다룰 것이기 때문에 학생 class 객체를 생성하고 주소값 저장하여 해당 주소값으로 각 학생 정보 참조(5,7,8)
		=> 학생은 여러명이 될 수 있고, 학생의 삭제시 자동적으로 길이가 변화하는(가변적인 길이) ArrayList의 자료형을 사용하여 여러 학생의 객체의 주소를 저장(1,2,11)
- 학생을 이름으로 검색할 수 있다. 동일한 이름이 모두 검색된다.(1,2,3,4,5,7,8,11)
  <선택> 검색어가 이름에 포함되면 모두 검색한다.   => contain 사용
		=> 자바기술: 조건문을 통한 검색 항목 포함 여부 판별(참/거짓) -> 반복문을 통해 존재하는 이름 값 중 해당 조건이 참이면 출력(검색메소드 정의)
- 학생을 삭제 할 수 있다. 학생의 아이디로 입력하여 삭제 한다. (1,2,3,4,5,7,8,11)
		=> 자바기술: 반복문과 조건문 통하여 해당 아이디 존재 유무 판별 -> 참 / 거짓 중 존재유무가 참이면 해당 값 삭제(삭제 메소드 정의)
- <선택> 학생은 10명 까지만 등록할 수 있다. **단, 배열은 사용하지 않는다.(1,2,3,10)
		=> 자바기술: 등록을 진행할 때는 final 성격의 변수, 정수의 자료형으로 선언한 최대값을 통해 조건 판별
- 교과목을 등록할 수 있다. <선택> 과목명은 중복 될 수 없다.(1,2,3,4,5,7,8,11)
		=> 교과목 전체를 등록 및 제어할 class가 필요(5)
		=> 교과목 여러개를 관리할 것이므로 각 교과목class의 객체의 주소를 모두 저장할 ArrayList 자료형의 변수 필요, 선언(1,8,11)
		=> 과목명을 저장할 변수, 이는 교과목 class로 생성한 객체에 대한 주소값을 통하여 참조, 접근(참조형)(1,2,8)
		=> 과목명이 중복되는지를 반복+조건으로 확인(3,4)
		=> 등록(값을 저장)할 때, private한 변수에 값을 저장해주는 기능인 public메소드를 사용(7,8)
- 교과목 전체리스트를 확인 할 수 있다.(1,2,3,4,5,7,8,11)
- 학생의 전체리스트를 확인 할 수 있다.(1,2,3,4,5,7,8,11)
- 메인 메뉴는 학생관리, 교과목관리이다.   <선택> 로그인이 있다.(5,6,7,8)
- <로그인 기능 선택> 로그인을 하면 수강신청 메뉴와 신청리스트 메뉴가 나온다.(1,2,5)
- 학생의 전체리스트를 확인 할 때, 수강 신청한 과목의 수를 숫자로 표시한다.(1,2,3,4,5,7,8,11)


// 분석
1. 메인 class			- 학생관리, 교과목 관리, 로그인
2. 학생 전체 class		- 학생 등록(최대 10명(배열사용X), MAXST == 10) / 검색(검색어가 이름에 포함되면 모두 검색) 
							/ 삭제(아이디로 입력하여 삭제) / 전체조회(수강신청과목수 숫자)
3. 학생 한명 class		- 아이디(중복불가), 이름(중복가능), 전화번호, 학년정보
4. 교과목 전체 class	- 교과목 등록 / 전체 확인
5. 교과목 한개 class   - 과목명(중복불가), 강의실, 담당교수
6. 로그인 class 		- 수강신청 메뉴 / 신청리스트 메뉴
7. 신청 class			- 이름 / 교과목 정보 입력(과목명, 담당교수) 




자바 기술 Stack
1. 변수 - 원시변수와 참조변수
2. 자료형
3. 조건문
4. 반복문
5. class와 객체, 생성자
6. class 추상화
7. 메서드 정의와 호출
8. 접근제어자
9. 공용변수 static
10. 상수 : final
11. List자료형 중 ArrayList
12. JVM    
13. 싱글톤 디자인 패턴                              